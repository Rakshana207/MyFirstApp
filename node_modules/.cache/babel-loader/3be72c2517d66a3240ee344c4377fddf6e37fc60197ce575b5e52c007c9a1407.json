{"ast":null,"code":"var _jsxFileName = \"/Users/kallarakshana/coding stuff/myfirstreact/src/Points.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport sample4 from './sample4.json';\nimport Points2 from './Points2';\nimport Points3 from './Points3';\nimport Points4 from './Points4';\nimport Points5 from './Points5';\nimport Points6 from './Points6';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Points() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    //setData(sample4.match1); // Assuming match1 is the array you want to iterate over\n\n    //function to process JSON data\n    const td = sample4.match1.map(item => {\n      const fp = item.player1 + item.player2 + item.player3 + item.player4; //calculating total kill points\n\n      //function to calculate position points\n      function calculatePositionPoints(pp) {\n        let wins = 0;\n        if (pp === 1) {\n          wins = 1;\n          return {\n            pp: 12,\n            wins\n          };\n        } else if (pp === 2) {\n          return {\n            pp: 9,\n            wins\n          };\n        } else if (pp === 3) {\n          return {\n            pp: 8,\n            wins\n          };\n        } else if (pp === 4) {\n          return {\n            pp: 7,\n            wins\n          };\n        } else if (pp === 5) {\n          return {\n            pp: 6,\n            wins\n          };\n        } else if (pp === 6) {\n          return {\n            pp: 5,\n            wins\n          };\n        } else if (pp === 7) {\n          return {\n            pp: 4,\n            wins\n          };\n        } else if (pp === 8) {\n          return {\n            pp: 3,\n            wins\n          };\n        } else if (pp === 9) {\n          return {\n            pp: 2,\n            wins\n          };\n        } else if (pp === 10) {\n          return {\n            pp: 1,\n            wins\n          };\n        } else if (pp === 11) {\n          return {\n            pp: 0,\n            wins\n          };\n        } else {\n          return {\n            pp: 0,\n            wins\n          };\n        }\n      }\n      const {\n        pp,\n        wins\n      } = calculatePositionPoints(item.position);\n      const tp = fp + pp;\n      return {\n        ...item,\n        //spread the original team object\n        fp,\n        pp,\n        tp,\n        wins\n      };\n    });\n\n    //after calculating all, first sort out based on total kill points(fp)\n    /*b.tp - a.tp: This expression subtracts the tp property of a from the tp property of b.\n    If b.tp is greater than a.tp, the result will be positive, indicating that b should come before a in the sorted array.\n    If b.tp is less than a.tp, the result will be negative, indicating that a should come before b in the sorted array.\n    If b.tp is equal to a.tp, the result will be zero, indicating that the order of a and b should remain unchanged.*/\n    td.sort((a, b) => b.tp - a.tp);\n    console.log(td);\n    for (let i = 0; i < td.length; i++) {\n      //check if the current team has 0 wins\n      for (let j = 0; j < td.length; j++) {\n        //if(td[j].wins===0 && (td[j].tp<td[i].tp || (td[j].tp===td[i].tp && td[j].wins!=0) && td[j].fp<td[i].fp)))\n        // Check if both the current team and the comparing team have zero wins and the comparing team's total points are less\n        if (td[j].tp === td[i].tp && td[i].wins === 1) {\n          //js has no swap function, \n          const temp = td[i];\n          td[i] = td[j];\n          td[j] = temp;\n        }\n        // Check if both teams have the same total points, but the comparing team has won a match\n        else if (td[j].tp === td[i].tp && (td[i].wins === 0 && td[j].wins === 0 || td[i].wins === 1 && td[j].wins === 1) && td[i].fp > td[j].fp) {\n          const temp1 = td[i];\n          td[i] = td[j];\n          td[j] = temp1;\n        }\n        // Check if both teams have zero wins and the comparing team has fewer total points but the same total kill points\n        else if (td[i].tp === td[j].tp && (td[i].wins === 0 && td[j].wins === 0 || td[i].wins === 1 && td[j].wins === 1) && td[i].fp === td[j].fp && td[i].pp > td[j].pp) {\n          const temp2 = td[i];\n          td[i] = td[j];\n          td[j] = temp2;\n        }\n      }\n    }\n\n    //set the td to state\n    setData(td);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Match 1 standings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), data ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Team Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Kill Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.teamName || item.teamName1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.wins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.fp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.pp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.tp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Points2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Points3, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Points4, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Points5, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Points6, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Points, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Points;\nexport default Points;\nvar _c;\n$RefreshReg$(_c, \"Points\");","map":{"version":3,"names":["React","useState","useEffect","sample4","Points2","Points3","Points4","Points5","Points6","jsxDEV","_jsxDEV","Fragment","_Fragment","Points","_s","data","setData","td","match1","map","item","fp","player1","player2","player3","player4","calculatePositionPoints","pp","wins","position","tp","sort","a","b","console","log","i","length","j","temp","temp1","temp2","children","class","fileName","_jsxFileName","lineNumber","columnNumber","index","teamName","teamName1","_c","$RefreshReg$"],"sources":["/Users/kallarakshana/coding stuff/myfirstreact/src/Points.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport sample4 from './sample4.json';\nimport Points2 from './Points2'\nimport Points3 from './Points3'\nimport Points4 from './Points4'\nimport Points5 from './Points5'\nimport Points6 from './Points6'\nfunction Points() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    //setData(sample4.match1); // Assuming match1 is the array you want to iterate over\n\n    //function to process JSON data\n      const td=sample4.match1.map(item=>{\n\n      const fp=item.player1+item.player2+item.player3+item.player4;//calculating total kill points\n      \n      \n      //function to calculate position points\n      function calculatePositionPoints(pp) \n      {\n        let wins=0;\n        if (pp === 1) \n        {\n            wins=1;\n            return {pp:12,wins};\n        } \n        else if (pp === 2) \n        { \n\n            return {pp:9,wins};\n        } \n        else if (pp === 3) \n        {\n            return {pp:8,wins};\n        } \n        else if (pp === 4) \n        {\n            return {pp:7,wins};\n        } \n        else if (pp === 5) \n        {\n            return {pp:6,wins};\n        }\n        else if (pp === 6) \n        {\n            return {pp:5,wins};\n        } \n        else if (pp === 7) \n        {\n            return {pp:4,wins};\n        } \n        else if (pp === 8) \n        {\n            return {pp:3,wins};\n        } \n        else if (pp === 9) \n        {\n            return {pp:2,wins};\n        } \n        else if (pp === 10) \n        {\n            return {pp:1,wins};\n        } \n        else if (pp === 11) \n        {\n            return {pp:0,wins};\n        } \n        else \n        {\n            return {pp:0,wins};\n        }\n    }\n\n      const {pp,wins}=calculatePositionPoints(item.position);\n      const tp=fp+pp;\n      \n      return{\n        ...item,//spread the original team object\n        fp,pp,tp,\n        wins\n      };\n    });\n\n    //after calculating all, first sort out based on total kill points(fp)\n    /*b.tp - a.tp: This expression subtracts the tp property of a from the tp property of b.\n    If b.tp is greater than a.tp, the result will be positive, indicating that b should come before a in the sorted array.\n    If b.tp is less than a.tp, the result will be negative, indicating that a should come before b in the sorted array.\n    If b.tp is equal to a.tp, the result will be zero, indicating that the order of a and b should remain unchanged.*/\n    td.sort((a,b)=>b.tp-a.tp);\n    \n\n    console.log(td);\n\n\n    for(let i=0;i<td.length;i++)\n    {\n      //check if the current team has 0 wins\n        for(let j=0;j<td.length;j++)\n        {\n          //if(td[j].wins===0 && (td[j].tp<td[i].tp || (td[j].tp===td[i].tp && td[j].wins!=0) && td[j].fp<td[i].fp)))\n          // Check if both the current team and the comparing team have zero wins and the comparing team's total points are less\n          if(td[j].tp===td[i].tp && td[i].wins===1 ) \n          {\n              //js has no swap function, \n              const temp=td[i];\n              td[i]=td[j];\n              td[j]=temp;\n          }\n          // Check if both teams have the same total points, but the comparing team has won a match\n          else if(td[j].tp===td[i].tp && ((td[i].wins===0 &&td[j].wins===0)||(td[i].wins===1 && td[j].wins===1 ))&& td[i].fp>td[j].fp)\n          {\n            const temp1=td[i];\n            td[i]=td[j];\n            td[j]=temp1;\n          }\n          // Check if both teams have zero wins and the comparing team has fewer total points but the same total kill points\n          else if(td[i].tp===td[j].tp && ((td[i].wins===0&&td[j].wins===0)||(td[i].wins===1 && td[j].wins===1 ))&& td[i].fp===td[j].fp&&td[i].pp>td[j].pp)\n          {\n            const temp2=td[i];\n            td[i]=td[j];\n            td[j]=temp2;\n          }\n      \n        \n      }\n    }\n\n   \n    //set the td to state\n    setData(td);\n  },[]);\n  \n  \n\n  return (\n    <>\n    <div class=\"container\">\n      <h1>Match 1 standings</h1>\n      {data ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Team Name</th>\n              <th>Wins</th>\n              <th>Total Kill Points</th>\n              <th>Position Points</th>\n              <th>Total Points</th>\n              \n              \n            </tr>\n          </thead>\n          <tbody>\n          {data.map((item, index) => (\n            <tr key={index}>\n              <td>{item.teamName || item.teamName1}</td>\n              <td>{item.wins}</td>\n              <td>{item.fp}</td>\n              <td>{item.pp}</td>\n              <td>{item.tp}</td>\n              \n              \n            </tr>\n          ))}\n        </tbody>\n        </table>\n      ) : (\n        <p>Loading...</p>\n      )}\n      <Points2/>\n      <Points3/>\n      <Points4/>\n      <Points5/>\n      <Points6/>\n    </div></>\n  );\n}\n\nexport default Points;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}